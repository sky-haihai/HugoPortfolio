<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fluffy Floaty Rubber Tennis Devlogs on Portfolio</title>
    <link>http://localhost:1313/en/projects/ffrt/</link>
    <description>Recent content in Fluffy Floaty Rubber Tennis Devlogs on Portfolio</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 16 May 2024 17:45:58 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/en/projects/ffrt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Devlog: Smoothed Sector Ray Casting</title>
      <link>http://localhost:1313/en/projects/ffrt/smooth-sector-cast/</link>
      <pubDate>Thu, 16 May 2024 17:45:58 +0000</pubDate>
      <guid>http://localhost:1313/en/projects/ffrt/smooth-sector-cast/</guid>
      <description>&lt;h2 id=&#34;goal&#34;&gt;Goal&lt;/h2&gt;&#xA;&lt;p&gt;The game project Fluffy Floaty Rubber Tennis is a physic-based fixed-Camera space tennis game. The only player control is to &lt;strong&gt;Swing&lt;/strong&gt; the racket.&lt;/p&gt;&#xA;&lt;p&gt;The logic I chose for the interaction between the racket and other objects when swinging is to apply a force to the object the racket hit and a reaction force to the player.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-not-physicsspherecast&#34;&gt;Why NOT Physics.SphereCast?&lt;/h2&gt;&#xA;&lt;p&gt;So.. why not just use the built-in Unity physics function &lt;code&gt;Physics.SphereCast&lt;/code&gt;?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
