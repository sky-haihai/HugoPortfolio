<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevLogs on Yaotian Huang</title>
    <link>https://www.yaotian-huang.com/devlog/</link>
    <description>Recent content in DevLogs on Yaotian Huang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Oct 2023 13:40:42 -0600</lastBuildDate>
    <atom:link href="https://www.yaotian-huang.com/devlog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on Learning Mozilla Hubs: Avator</title>
      <link>https://www.yaotian-huang.com/devlog/notes-on-learning-mozilla-hubs-avator/</link>
      <pubDate>Sat, 28 Oct 2023 13:40:42 -0600</pubDate>
      <guid>https://www.yaotian-huang.com/devlog/notes-on-learning-mozilla-hubs-avator/</guid>
      <description>Introduction In my last post I started learning Mozilla Hubs by creating a demo scene. In this post I&amp;rsquo;m going to talk about the avator system in Hubs.&#xA;Demo Here&amp;rsquo;s a demo avator I made during my study, you may use it as your own avator from this Link&#xA;Features It has following features:&#xA;Idle animation Head tracking Lip syncing (User audio input feedback) Personal space invader (other avators will be transparent or disappear when the user is too close to them) It doesn&amp;rsquo;t have:</description>
    </item>
    <item>
      <title>Notes on Learning Mozilla Hubs: Scene</title>
      <link>https://www.yaotian-huang.com/devlog/notes-on-learning-mozilla-hubs-scene/</link>
      <pubDate>Thu, 26 Oct 2023 10:27:04 -0600</pubDate>
      <guid>https://www.yaotian-huang.com/devlog/notes-on-learning-mozilla-hubs-scene/</guid>
      <description>Introduction Mozilla Hubs is a open-source browser-based metaverse web application that supports XR. The first thing to keep in mind is that it&amp;rsquo;s component-based like Unity. In the official build, Hubs supports various but very limited components such as model renderer, images renderer, videos renderer, audio field, etc. Although what creators could do in Hubs is very limited by the default build, I could imagine it&amp;rsquo;s bright future for two reasons:</description>
    </item>
    <item>
      <title>Recreating the Rain Drop Effect in The Legend of Zelda: TOTK</title>
      <link>https://www.yaotian-huang.com/devlog/recreating-the-rain-drop-effect-in-the-legend-of-zelda-totk/</link>
      <pubDate>Tue, 23 May 2023 23:50:10 -0400</pubDate>
      <guid>https://www.yaotian-huang.com/devlog/recreating-the-rain-drop-effect-in-the-legend-of-zelda-totk/</guid>
      <description>Environment Unity 2021.3.16f1&#xA;Universal Render Pipeline 12.0.0&#xA;Introduction I recently finished The Legend of Zelda: Tears of the Kingdom. To me as an indie game developer, it felt like a text book of open world game design. I had a lot of fun playing it and I learned a lot from it.&#xA;One of the things I noticed is the rain drop effect that react to the uppper edges of the scene.</description>
    </item>
    <item>
      <title>Layer-based Screen-Door Transparency Effect using Unity URP 12</title>
      <link>https://www.yaotian-huang.com/devlog/layer-based-screen-door-transparency-effect-using-unity-urp-12/</link>
      <pubDate>Sun, 07 May 2023 22:54:14 -0400</pubDate>
      <guid>https://www.yaotian-huang.com/devlog/layer-based-screen-door-transparency-effect-using-unity-urp-12/</guid>
      <description>Introduction In this post, I will be discussing how I implemented a Screen-door transparency effect in Unity using URP 12. This effect is used to simulate the look of a transparent object by applying Bayer Ordered Dithering to the semi-transparent object. This effect can be used in games to give the player a better view of the character even when the character is coverd by obstacles.&#xA;How it works You can think of this effect as using a sharp pencil to poke a dense grid of holes onto a paper to reveal the objects behind the paper.</description>
    </item>
    <item>
      <title>Introducing Xiheframework</title>
      <link>https://www.yaotian-huang.com/devlog/introducing-xiheframework/</link>
      <pubDate>Fri, 05 May 2023 14:24:13 -0400</pubDate>
      <guid>https://www.yaotian-huang.com/devlog/introducing-xiheframework/</guid>
      <description>What is XiheFramework XiheFramework is a game framework for agile development, wrote on top of Unity engine.&#xA;Who Should Use Scale Ideally at least two members:&#xA;Programmer for creating custom modules(game features) Technical designer for node editing Or use it as an individual developer (hair loss rate 200%)&#xA;Skills Unity Editor Node-based Editor C# (Custom Modules) Warning &amp;#x26a0;&amp;#xfe0f; Consider not to use this framework if you are work individually and have ZERO programming skill as you probably will have a lot of pain if you just use the node editor for all game logic.</description>
    </item>
  </channel>
</rss>
