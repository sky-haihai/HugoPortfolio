<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>EOTR Devlog on Yaotian Huang</title>
    <link>https://sky-haihai.github.io/Yaotian-Huang/categories/eotr-devlog/</link>
    <description>Recent content in EOTR Devlog on Yaotian Huang</description>
    <image>
      <title>Yaotian Huang</title>
      <url>https://sky-haihai.github.io/Yaotian-Huang/papermod-cover.png</url>
      <link>https://sky-haihai.github.io/Yaotian-Huang/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Mar 2024 11:59:37 -0700</lastBuildDate><atom:link href="https://sky-haihai.github.io/Yaotian-Huang/categories/eotr-devlog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Create GPU Instancing Billboard Grass Without Creating Position Buffer in URP</title>
      <link>https://sky-haihai.github.io/Yaotian-Huang/posts/gamedev/create-gpu-instancing-billboard-grass-without-creating-position-buffer-in-urp/</link>
      <pubDate>Mon, 04 Mar 2024 11:59:37 -0700</pubDate>
      
      <guid>https://sky-haihai.github.io/Yaotian-Huang/posts/gamedev/create-gpu-instancing-billboard-grass-without-creating-position-buffer-in-urp/</guid>
      <description>Environment Unity 2021.3.16f1
URP 12.0
Prerequisite Basic knowledge of C# and Shader programming (HLSL).
GPU Instancing GPU instancing is a technique that allows you to draw multiple copies of the same mesh using a single draw call. It is basically normal forward rendering pipeline but skipping the Vertex Specification stage.
Graphics.DrawMeshInstancedIndirect The first step to create multiple millions of grass is to properly call the GPU to draw so, a.k.a. draw call.</description>
    </item>
    
  </channel>
</rss>
