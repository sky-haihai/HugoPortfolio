<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>作品集</title>
    <link>http://localhost:1313/cn/</link>
    <description>Recent content on 作品集</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 16 May 2024 17:45:58 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>开发日志：平滑扇区射线投射</title>
      <link>http://localhost:1313/cn/projects/ffrt/smooth-sector-cast/</link>
      <pubDate>Thu, 16 May 2024 17:45:58 +0000</pubDate>
      <guid>http://localhost:1313/cn/projects/ffrt/smooth-sector-cast/</guid>
      <description>&lt;h2 id=&#34;目标&#34;&gt;目标&lt;/h2&gt;&#xA;&lt;p&gt;游戏项目 Fluffy Floaty Rubber Tennis 是一个基于物理的固定摄像机太空网球游戏。玩家唯一的控制是&lt;strong&gt;挥动&lt;/strong&gt;球拍。&lt;/p&gt;&#xA;&lt;p&gt;我选择的球拍挥动时与其他物体交互的逻辑是对球拍击中的物体施加一个力，并对玩家施加一个反作用力。&lt;/p&gt;&#xA;&lt;h2 id=&#34;为什么不用-physicsspherecast&#34;&gt;为什么不用 Physics.SphereCast？&lt;/h2&gt;&#xA;&lt;p&gt;那么.. 为什么不用内置的 Unity 物理函数 &lt;code&gt;Physics.SphereCast&lt;/code&gt; 呢？&lt;/p&gt;&#xA;&lt;p&gt;也许我只是不了解它背后的真实逻辑，但我认为当击中距离等于 0 时它是有问题的。&lt;/p&gt;&#xA;&lt;p&gt;如下图所示，当玩家向左挥动时，球拍的起始点是角色的原点，终点比球拍稍远一点。预期的碰撞点发生在球拍右侧的长障碍物和球拍的“第一个球体”之间。由于球拍在到达障碍物时的移动距离为 0，因此预期的击中距离也应为 0。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/en/projects/ffrt/smooth-sector-cast/sphere-cast.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;到目前为止，一切对我来说都很合理。实际上，球拍返回的击中距离确实为 0，正如预期的那样，但是击中点在 &lt;code&gt;Vector3.Zero&lt;/code&gt;！&lt;/p&gt;&#xA;&lt;p&gt;我做了多次测试，结果是一致的。只要击中距离为 0，击中点总是在 &lt;code&gt;Vector3.Zero&lt;/code&gt;&amp;hellip;&lt;/p&gt;&#xA;&lt;h2 id=&#34;构建新解决方案&#34;&gt;构建新解决方案&lt;/h2&gt;&#xA;&lt;p&gt;由于内置函数无法按预期工作，我决定使用 &lt;code&gt;Physics.Raycast&lt;/code&gt; 构建自己的解决方案。&lt;/p&gt;&#xA;&lt;p&gt;该机制实际上是基于该项目的需求：挥动球拍。&lt;/p&gt;&#xA;&lt;h3 id=&#34;直观性&#34;&gt;直观性&lt;/h3&gt;&#xA;&lt;p&gt;分解问题，这些是使挥动直观的关键点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;舒适的挥动应包括角色周围的小圆空间，因此当球与玩家重叠时，玩家应能击中它。&lt;/li&gt;&#xA;&lt;li&gt;挥动应呈扇形，因为挥动本质上是旋转手臂，使球拍覆盖扇形区域。&lt;/li&gt;&#xA;&lt;li&gt;挥动应首先击中最接近瞄准方向或鼠标位置的物体。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;因此，击打区域应覆盖如下：&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/en/projects/ffrt/smooth-sector-cast/new-1.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h3 id=&#34;机制&#34;&gt;机制&lt;/h3&gt;&#xA;&lt;p&gt;如上所示，思路是绘制两个同心圆，然后通过圆心绘制两条线来确定扇区角度，然后连接击打点以形成一个带有平滑中心角的扇区区域。&lt;/p&gt;&#xA;&lt;p&gt;参数为：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;重叠圆的半径。&lt;/li&gt;&#xA;&lt;li&gt;扇区所在圆的半径。（挥动球拍时球拍可以到达的距离）&lt;/li&gt;&#xA;&lt;li&gt;扇区的角度。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;射线投射&#34;&gt;射线投射&lt;/h3&gt;&#xA;&lt;p&gt;然后我们可以以定义的射线密度从小圆投射到大圆。在这个项目中，我&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/en/projects/ffrt/smooth-sector-cast/new-2.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h3 id=&#34;射线排序&#34;&gt;射线排序&lt;/h3&gt;&#xA;&lt;p&gt;如直观性部分所述，射线应按顺序/剔除，以便玩家击中他们想要击中的物体。&lt;/p&gt;&#xA;&lt;p&gt;假设玩家瞄准右侧，重叠击打区域的绿色圆圈是一个球。没有任何排序的默认行为是相当随机的。例如，在显示的图像中，射线可以从底部投射到顶部，从顶部投射到底部，甚至从中间到边缘。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/en/projects/ffrt/smooth-sector-cast/new-4.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/en/projects/ffrt/smooth-sector-cast/new-3.png&#34; height=&#34;200&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;在这种情况下，我决定添加三种排序方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;距离排序&lt;/strong&gt;：根据到扇区中心的距离对射线进行排序。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;角度排序&lt;/strong&gt;：根据射线与瞄准方向之间的角度对射线进行排序。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;首次/最后击中排序&lt;/strong&gt;：根据射线投射的顺序对射线进行排序。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;实施&#34;&gt;实施&lt;/h2&gt;&#xA;&lt;p&gt;经过一些调试，结果相当不错，至少在游戏性方面是这样。&lt;/p&gt;&#xA;&lt;p&gt;这是不同排序方法的完整对比：&lt;/p&gt;&#xA;&lt;div style=&#34;display: flex; flex-wrap: wrap; justify-content: center; gap: 5px;&#34;&gt;&#xD;&#xA;    &lt;div style=&#34;display: flex; flex-direction: column; align-items: center; width: 300px;&#34;&gt;&#xD;&#xA;        &lt;img src=&#34;first-hit.png&#34; alt=&#34;first hit&#34; style=&#34;width: 100%; height: auto; aspect-ratio: 1 / 1;&#34;&gt;&#xD;&#xA;        &lt;div style=&#34;margin-top: 0px; text-align: center;&#34;&gt;首次击中&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;display: flex; flex-direction: column; align-items: center; width: 300px;&#34;&gt;&#xD;&#xA;        &lt;img src=&#34;last-hit.png&#34; alt=&#34;last hit&#34; style=&#34;width: 100%; height: auto; aspect-ratio: 1 / 1;&#34;&gt;&#xD;&#xA;        &lt;div style=&#34;margin-top: 0px; text-align: center;&#34;&gt;最后击中&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;display: flex; flex-direction: column; align-items: center; width: 300px;&#34;&gt;&#xD;&#xA;        &lt;img src=&#34;dist-min.png&#34; alt=&#34;distance min&#34; style=&#34;width: 100%; height: auto; aspect-ratio: 1 / 1;&#34;&gt;&#xD;&#xA;        &lt;div style=&#34;margin-top: 0px; text-align: center;&#34;&gt;最小距离&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;display: flex; flex-direction: column; align-items: center; width: 300px;&#34;&gt;&#xD;&#xA;        &lt;img src=&#34;dist-max.png&#34; alt=&#34;distance max&#34; style=&#34;width: 100%; height: auto; aspect-ratio: 1 / 1;&#34;&gt;&#xD;&#xA;        &lt;div style=&#34;margin-top: 0px; text-align: center;&#34;&gt;最大距离&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;display: flex; flex-direction: column; align-items: center; width: 300px;&#34;&gt;&#xD;&#xA;        &lt;img src=&#34;angle-min.png&#34; alt=&#34;angle min&#34; style=&#34;width: 100%; height: auto; aspect-ratio: 1 / 1;&#34;&gt;&#xD;&#xA;        &lt;div style=&#34;margin-top: 0px; text-align: center;&#34;&gt;最小角度&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;    &lt;div style=&#34;display: flex; flex-direction: column; align-items: center; width: 300px;&#34;&gt;&#xD;&#xA;        &lt;img src=&#34;angle-max.png&#34; alt=&#34;angle max&#34; style=&#34;width: 100%; height: auto; aspect-ratio: 1 / 1;&#34;&gt;&#xD;&#xA;        &lt;div style=&#34;margin-top: 0px; text-align: center;&#34;&gt;最大角度&lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&lt;h2 id=&#34;想在游戏中看到这个工作成果吗&#34;&gt;想在游戏中看到这个工作成果吗？&lt;/h2&gt;&#xA;&lt;p&gt;自己试玩游戏吧！&lt;/p&gt;</description>
    </item>
    <item>
      <title>Auto Fishing in World of Warcraft Based on RMS of the Audio Loudness</title>
      <link>http://localhost:1313/cn/code/auto-fishing-wow/</link>
      <pubDate>Wed, 01 May 2024 08:35:48 -0400</pubDate>
      <guid>http://localhost:1313/cn/code/auto-fishing-wow/</guid>
      <description>&lt;h2 id=&#34;morally-speaking&#34;&gt;Morally Speaking&lt;/h2&gt;&#xA;&lt;p&gt;Fishing in most video games are basically free mini Gacha games, players can get literal crap or something extremely rewarding, all in the same pool. Unlike mobile Gacha game that cost players money, fishing typically trade player&amp;rsquo;s wait time with some expectation for a bigger reward.&lt;/p&gt;&#xA;&lt;p&gt;The only bad part of this no risk high reward process called fishing in game design aspect is that it&amp;rsquo;s designed to be boring and repetitive to keep players from doing it forever.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Devlog: Dynamic Shadow for 2D Animation</title>
      <link>http://localhost:1313/cn/projects/eotr/dynamic-shadow-for-2d-animation/</link>
      <pubDate>Mon, 29 Apr 2024 15:07:01 +0000</pubDate>
      <guid>http://localhost:1313/cn/projects/eotr/dynamic-shadow-for-2d-animation/</guid>
      <description>&lt;h2 id=&#34;why-dynamic-shadow-for-2d-animation&#34;&gt;Why Dynamic Shadow for 2D Animation?&lt;/h2&gt;&#xA;&lt;p&gt;In the game project Echoes of the Roots, an very important art decision to win us the Best Art Award was the pillar to combine 2D animation and 3D enviroment to achieve a sense 2.5D Visual Style.&lt;/p&gt;&#xA;&lt;p&gt;Among the various efforts, a key point was to achieve the consistancy of the shadow between 2D and 3D objects. 3D objects generally involve a more complex lighting model than 2D objects, so the our direction was pretty clear: to simplify the lighting model for 3D objects to match the 2D look, and to make 2D shadows dynamic to trick the player&amp;rsquo;s eyes to perceive that the 2D and 3D objects are in the same world.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create Stylized GPU Instancing Billboard Grass Without Creating Position Buffer in URP</title>
      <link>http://localhost:1313/cn/ta/create-stylized-gpu-instancing-billboard-grass-without-creating-position-buffer-in-urp/</link>
      <pubDate>Mon, 04 Mar 2024 11:59:37 -0700</pubDate>
      <guid>http://localhost:1313/cn/ta/create-stylized-gpu-instancing-billboard-grass-without-creating-position-buffer-in-urp/</guid>
      <description>&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;&#xA;&lt;p&gt;Unity 2021.3.16f1&lt;br&gt;&#xA;URP 12.0&lt;/p&gt;&#xA;&lt;h2 id=&#34;prerequisite&#34;&gt;Prerequisite&lt;/h2&gt;&#xA;&lt;p&gt;Basic knowledge of C# and Shader programming (HLSL).&lt;/p&gt;&#xA;&lt;h2 id=&#34;gpu-instancing&#34;&gt;GPU Instancing&lt;/h2&gt;&#xA;&lt;p&gt;GPU instancing is a technique that allows you to draw multiple copies of the same mesh using a single draw call. It is basically normal forward rendering pipeline but skipping the Vertex Specification stage.&lt;/p&gt;&#xA;&lt;h2 id=&#34;graphicsdrawmeshinstancedindirect&#34;&gt;Graphics.DrawMeshInstancedIndirect&lt;/h2&gt;&#xA;&lt;p&gt;The first step to create multiple millions of grass is to properly call the GPU to draw so, a.k.a. draw call. In Unity, we can use &lt;code&gt;Graphics.DrawMeshInstancedIndirect&lt;/code&gt; to create a GPU instancing draw call.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Notes on Learning Mozilla Hubs: Avator</title>
      <link>http://localhost:1313/cn/ta/notes-on-learning-mozilla-hubs-avator/</link>
      <pubDate>Sat, 28 Oct 2023 13:40:42 -0600</pubDate>
      <guid>http://localhost:1313/cn/ta/notes-on-learning-mozilla-hubs-avator/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In my last post I started learning Mozilla Hubs by creating a demo scene. In this post I&amp;rsquo;m going to talk about the avator system in Hubs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a demo avator I made during my study, you may use it as your own avator from this &lt;a href=&#34;https://0827133699.us1.myhubs.net/avatars/oJpqzhA&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;features&#34;&gt;Features&lt;/h4&gt;&#xA;&lt;p&gt;It has following features:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Idle animation&lt;/li&gt;&#xA;&lt;li&gt;Head tracking&lt;/li&gt;&#xA;&lt;li&gt;Lip syncing (User audio input feedback)&lt;/li&gt;&#xA;&lt;li&gt;Personal space invader (other avators will be transparent or disappear when the user is too close to them)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;It doesn&amp;rsquo;t have:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Notes on Learning Mozilla Hubs: Scene</title>
      <link>http://localhost:1313/cn/ta/notes-on-learning-mozilla-hubs-scene/</link>
      <pubDate>Thu, 26 Oct 2023 10:27:04 -0600</pubDate>
      <guid>http://localhost:1313/cn/ta/notes-on-learning-mozilla-hubs-scene/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Mozilla Hubs is a open-source browser-based metaverse web application that supports XR. The first thing to keep in mind is that it&amp;rsquo;s component-based like Unity. In the official build, Hubs supports various but very limited components such as model renderer, images renderer, videos renderer, audio field, etc. Although what creators could do in Hubs is very limited by the default build, I could imagine it&amp;rsquo;s bright future for two reasons:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Harmony Script: Adding Placeholder Drawings to Empty Timeline Cells</title>
      <link>http://localhost:1313/cn/ta/harmony-script-adding-placeholder-drawings-to-empty-timeline-cells/</link>
      <pubDate>Mon, 23 Oct 2023 09:35:14 -0400</pubDate>
      <guid>http://localhost:1313/cn/ta/harmony-script-adding-placeholder-drawings-to-empty-timeline-cells/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In this post, I will introduce a script I wrote for Toon-Boom Harmony that can be used to fill empty timeline cells with a placeholder drawing named &amp;ldquo;00&amp;rdquo; in order to save lots of time for animators. This is my first time writing a script for Harmony 20, so along with the script, I will also talk about what I learnt about the scripting module of Harmony from the past few days and some of the challenges I encountered.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recreating the Rain Drop Effect in The Legend of Zelda: TOTK</title>
      <link>http://localhost:1313/cn/ta/recreating-the-rain-drop-effect-in-the-legend-of-zelda-totk/</link>
      <pubDate>Tue, 23 May 2023 23:50:10 -0400</pubDate>
      <guid>http://localhost:1313/cn/ta/recreating-the-rain-drop-effect-in-the-legend-of-zelda-totk/</guid>
      <description>&lt;h2 id=&#34;environment&#34;&gt;Environment&lt;/h2&gt;&#xA;&lt;p&gt;Unity 2021.3.16f1&lt;br&gt;&#xA;Universal Render Pipeline 12.0.0&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;I recently finished &lt;em&gt;The Legend of Zelda: Tears of the Kingdom&lt;/em&gt;. To me as an indie game developer, it felt like a text book of open world game design. I had a lot of fun playing it and I learned a lot from it.&lt;/p&gt;&#xA;&lt;p&gt;One of the things I noticed is the rain drop effect that react to the uppper edges of the scene. It&amp;rsquo;s a very subtle effect but it actually guided me through the thunder island where the player&amp;rsquo;s visibility range was less than 1 meter. In the image below, you can see that the rain drops react to the edge of the mining cart rails, which tells the player that there is a path to continue the journey. I guess probably the game designer didn&amp;rsquo;t intend to do this, but it&amp;rsquo;s Nintendo, you never know.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting Started in Xiheframework</title>
      <link>http://localhost:1313/cn/code/getting-started-xiheframework/</link>
      <pubDate>Thu, 18 May 2023 08:35:48 -0400</pubDate>
      <guid>http://localhost:1313/cn/code/getting-started-xiheframework/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In the previous post, I introduced the Xiheframework and its core modules. In this post, I will show you how to use it in your project and how to create your own modules in detail.&lt;/p&gt;&#xA;&lt;h2 id=&#34;import-xiheframework&#34;&gt;Import Xiheframework&lt;/h2&gt;&#xA;&lt;h3 id=&#34;via-git-submodule&#34;&gt;Via Git Submodule&lt;/h3&gt;&#xA;&lt;p&gt;The recommended way to import Xiheframework is to use Git Submodule. This way, you can easily update Xiheframework to the latest version.&lt;/p&gt;&#xA;&lt;p&gt;To do that:&lt;/p&gt;&#xA;&lt;p&gt;Run the following command from the root of your Unity project folder to add Xiheframework as a submodule.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Layer-based Screen-Door Transparency Effect using Unity URP 12</title>
      <link>http://localhost:1313/cn/ta/layer-based-screen-door-transparency-effect-using-unity-urp-12/</link>
      <pubDate>Sun, 07 May 2023 22:54:14 -0400</pubDate>
      <guid>http://localhost:1313/cn/ta/layer-based-screen-door-transparency-effect-using-unity-urp-12/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In this post, I will be discussing how I implemented a &lt;strong&gt;Screen-door transparency&lt;/strong&gt; effect in Unity using &lt;strong&gt;URP 12&lt;/strong&gt;. This effect is used to simulate the look of a transparent object by applying &lt;strong&gt;Bayer Ordered Dithering&lt;/strong&gt; to the semi-transparent object. This effect can be used in games to give the player a better view of the character even when the character is coverd by obstacles.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;&#xA;&lt;p&gt;You can think of this effect as using a sharp pencil to poke a dense grid of holes onto a paper to reveal the objects behind the paper. Also you can use a Threshold value to control how transparent the object is, a.k.a, how density of the grid of holes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating a Diet Dashboard Based on Angular</title>
      <link>http://localhost:1313/cn/code/creating-a-diet-dashboard-based-on-angular/</link>
      <pubDate>Sun, 07 May 2023 21:47:36 -0400</pubDate>
      <guid>http://localhost:1313/cn/code/creating-a-diet-dashboard-based-on-angular/</guid>
      <description>&lt;p&gt;Source code: &lt;a href=&#34;https://github.com/sky-haihai/diet-dashboard.git&#34;&gt;Github Repo&lt;/a&gt;&lt;br&gt;&#xA;View Live Demo: &lt;a href=&#34;https://diet-dashboard.vercel.app/&#34;&gt;Diet Dashboard&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Secured Web Information System Prototype</title>
      <link>http://localhost:1313/cn/code/secured-web-information-system-prototype/</link>
      <pubDate>Sun, 07 May 2023 02:26:29 -0400</pubDate>
      <guid>http://localhost:1313/cn/code/secured-web-information-system-prototype/</guid>
      <description>&lt;p&gt;View the full project here: &lt;a href=&#34;https://github.com/sky-haihai/4020A2-Secured-Web-IS.git&#34;&gt;Github Repo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In a recent academic project, I implemented a secured web information system using Java Servlet and created several content pages including AboutMe, Skills, and Contact pages for testing my system.&lt;/p&gt;&#xA;&lt;p&gt;The goal was to implement a web application that could allow users to login, logout and view their profile. The application also had to be secured against unauthorized access such as directly typing the content page URL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Information Retrieval: Web Document Indexer and Search Engine Prototype</title>
      <link>http://localhost:1313/cn/code/information-retrieval-web-document-indexer-and-search-engine-prototype/</link>
      <pubDate>Fri, 05 May 2023 16:49:27 -0400</pubDate>
      <guid>http://localhost:1313/cn/code/information-retrieval-web-document-indexer-and-search-engine-prototype/</guid>
      <description>&lt;p&gt;View the full project here: &lt;a href=&#34;https://github.com/sky-haihai/4020A3-Information-Retrieval.git&#34;&gt;Github Repo&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In a recent academic project, I created an efficient indexer and search engine for a collection of Web documents. My goal was to implement an program that could create an inverted index for the provided Web documents(.GZ files), and search these web documents for 20 topics/queries, outputting the search results in a file.&lt;/p&gt;&#xA;&lt;h3 id=&#34;input&#34;&gt;Input&lt;/h3&gt;&#xA;&lt;p&gt;a bunch of .GZ files, each containing multiple XML web documents. Each xml doc contains multiple articles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introducing Xiheframework</title>
      <link>http://localhost:1313/cn/code/introducing-xiheframework/</link>
      <pubDate>Fri, 05 May 2023 14:24:13 -0400</pubDate>
      <guid>http://localhost:1313/cn/code/introducing-xiheframework/</guid>
      <description>&lt;h2 id=&#34;what-is-xiheframework&#34;&gt;What is XiheFramework&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;XiheFramework&lt;/strong&gt; is a game framework for agile development, wrote on top of &lt;strong&gt;Unity&lt;/strong&gt; engine.&lt;/p&gt;&#xA;&lt;h2 id=&#34;who-should-use&#34;&gt;Who Should Use&lt;/h2&gt;&#xA;&lt;h3 id=&#34;scale&#34;&gt;Scale&lt;/h3&gt;&#xA;&lt;p&gt;Ideally at least two members:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Programmer for creating custom modules(game features)&lt;/li&gt;&#xA;&lt;li&gt;Technical designer for node editing&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Or use it as an individual developer (&lt;del&gt;hair loss rate 200%&lt;/del&gt;)&lt;/p&gt;&#xA;&lt;h3 id=&#34;skills&#34;&gt;Skills&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unity Editor&lt;/li&gt;&#xA;&lt;li&gt;Node-based Editor&lt;/li&gt;&#xA;&lt;li&gt;C# (Custom Modules)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;warning-warning&#34;&gt;Warning &amp;#x26a0;&amp;#xfe0f;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Consider not to use this framework if you are work individually and have &lt;strong&gt;ZERO&lt;/strong&gt; programming skill as you probably will have a lot of pain if you just use the node editor for all game logic. However, this is just a warning, feel free to ignore it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
